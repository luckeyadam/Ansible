##
# Example Ansible playbook that uses the PostgreSQL module.
#
# This installs PostgreSQL, creates a database called
# "testdb" and a user called "dbuser" from vars file
# with access to the "testdb" database.
#
---
- hosts: EC2database
  become: yes
  remote_user: ec2-user
  gather_facts: no


  vars_files:
  - files/vars.yml
  - files/secure.yml

  tasks:
  - name: upgrade all packages
    yum: name=* state=latest

  - name: ensure packages are installed
    yum: name={{item}}
    with_items:
        - postgresql
  - name: install postgres
    yum:
      state: latest
      pkg: "{{ item }}"
    with_items:
        - postgresql94-server
        - postgresql94-contrib
        - python-psycopg2 
  - service:
      name: postgresql
      state: started


#  - name: install psycopg2 python module
#    pip: name=psycopg2

#- hosts: EC2database
#  become: yes
#  remote_user: ec2-user
#  gather_facts: no

#  vars_files:
#  - files/vars.yml

#  tasks:
  - name: make database
    become_user: postgres
    postgresql_db:
      name={{dbname}}

#  - name: ensure database is created
#    postgresql_db: name={{dbname}}

  - name: ensure user has access to database
    become_user: postgres
    postgresql_user: db={{dbname}} name={{dbuser}} password={{dbpassword}} priv=ALL

  - name: ensure user does not have unnecessary privilege
    become_user: postgres
    postgresql_user: name={{dbuser}} role_attr_flags=NOSUPERUSER,NOCREATEDB

  - name: ensure no other user can access the database
    become_user: postgres
    postgresql_privs: db={{dbname}} role=PUBLIC type=database priv=ALL state=absent

  # Adding a new line
  - name: modify pg_hba.conf
    lineinfile: dest="{{ pg_hba_conf }}" regexp="^host\s+all\s+test_entry\s+127.0.0.1\/32\s+trust$" insertafter="^#sIPv4slocal.+" line="host    all             test_entry  127.0.0.1/32            trust"
