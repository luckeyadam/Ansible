--- # Ansible playbook to configure static web server and to create new AMI template
- hosts: aws
  connection: ssh
  remote_user: ec2-user
  become: yes
  gather_facts: yes
  tasks:
  - name: Execute all installs
    yum: name={{ item }} state=latest
    with_items:
      - httpd
      - wget
    notify:
      - CopySiteFiles
      - RestartHTTPD
      - WaitForSite
      - TestSite
      - DisplayResults
  handlers:
  - name: CopySiteFiles
    copy: src=./files/index.html dest=/var/www/html/index.html owner=root group=root mode=0655 backup=yes
  - name: RestartHTTPD
    service: name=httpd state=restarted
  - name: WaitForSite
    wait_for: host={{ ansible_nodename }} port=80 delay=5
  - name: TestSite
    shell: /usr/bin/wget http://localhost
    register: site_result
  - name: DisplayResults
    debug: var=site_result


- hosts: localhost
  connection: local
  remote_user: ansible
  become: sudo
  gather_facts: no
  vars_files:
  - ../../files/awscreds.yml
  tasks:
  - name: Take a snapshot
    ec2_snapshot:
      aws_access_key: "{{ aws_id }}"
      aws_secret_key: "{{ aws_key }}"
      region: "{{ aws_region }}"
      instance_id: i-0722140de560f3a59
      device_name: /dev/sdb
      description: Initial playbook static site deployment backup
      wait: no
    register: snapshot_results
    notify:
      - DisplaySnapshotResults
      - CreateNewAMITemplate
      - DisplayAMICreationResults
  handlers:
  - name: DisplaySnapshotResults
    debug: var=snapshot_results
  - name: CreateNewAMITemplate
    ec2_ami:
      aws_access_key: "{{ aws_id }}"
      aws_secret_key: "{{ aws_key }}"
      region: "{{ aws_region }}"
      instance_id: i-0722140de560f3a59
      wait: no
      name: ansiblewebservertemplate1
      tags:
        Name: AnsibleAMITemplate1
        Service: TestAMITemplatePlaybook1
    register: ami_results
  - name: DisplayAMICreationResults
    debug: var=ami_results
